{"version":3,"sources":["components/Blog.js","components/Register.js","components/Login.js","components/Togglable.js","components/CreateBlog.js","components/Blogs.js","components/Notification.js","components/Notifications.js","services/login.js","services/blogs.js","services/register.js","App.js","index.js"],"names":["Blog","blog","updateBlog","deleteBlog","space","marginRight","useState","visible","setVisible","likes","setLikes","displayStyle","display","buttonLabel","increaseLikes","a","blogObject","title","author","url","id","removeBlog","window","confirm","user","username","data-testid","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","type","value","onClick","Register","register","toggleVisibility","details","setDetails","updateDetails","item","newUserObject","spaceStyle","onSubmit","event","preventDefault","htmlFor","onChange","target","float","LoginForm","setUsername","setPassword","handleSubmit","TogglableBlogEntry","React","forwardRef","props","ref","displayName","showWhenVisible","hideWhenVisible","useImperativeHandle","children","TogglableLandingPage","registerHandle","setRegister","registerDisplayStyle","restDisplayStyle","Login","CreateBlog","addBlog","newBlog","setNewBlog","createBlogObject","newBlogObject","addNewBlog","Blogs","clear","getBlogs","blogs","setBlogs","toggleCreate","useRef","useEffect","length","then","data","createNewBlog","current","deleteExisting","filter","localStorage","getItem","sort","b","map","Success","message","messageStyle","color","success","Failure","error","Notifications","background","fontSize","borderStyle","borderRadius","padding","validateLogin","credentials","axios","post","baseUrl","services","getAll","get","response","createNew","token","configuration","headers","Authorization","updateExisting","put","delete","name","password","App","notification","setNotification","formInputStyle","fetchBlogs","blogService","console","log","setTimeout","createBlog","handleLogin","loginService","setItem","handleRegister","registerService","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01d153b7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, updateBlog, deleteBlog }) => {\n  Blog.propTypes = {\n    blog: PropTypes.object.isRequired,\n    updateBlog: PropTypes.func.isRequired,\n    deleteBlog: PropTypes.func.isRequired\n  }\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const space = {\n    marginRight: 5\n  }\n\n  const [ visible, setVisible ] = useState(false)\n  const [ likes, setLikes ] = useState(blog.likes)\n\n  const toggleVisibility = () => setVisible(!visible)\n  const displayStyle = { display: visible ? '' : 'none' }\n  const buttonLabel = visible ? 'hide' : 'show'\n\n  const increaseLikes = async () => {\n    setLikes(likes+1)\n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: likes+1\n    }\n    await updateBlog(blog.id, blogObject)\n  }\n  const removeBlog = async () => {\n    if(window.confirm(`Remove blog '${blog.title}' by ${blog.user.username}`)){\n      await deleteBlog(blog.id)\n    }\n  }\n\n  return (\n    <div data-testid='blog-container' style={blogStyle}>\n      <div data-testid=\"static-elements\">\n        <span data-testid=\"blog-title\" style={space}>{blog.title}</span> <span data-testid=\"blog-author\" style={space}>{blog.author}</span> <input type=\"button\" value={buttonLabel} onClick={toggleVisibility} data-testid=\"toggle-details\"/>\n      </div>\n      <div data-testid=\"dynamic-elements\" style={displayStyle} >\n        <div data-testid=\"blog-url\">\n          {blog.url}<br />\n        </div>\n        <span data-testid=\"blog-likes\" style={space}>{likes}</span><input type=\"button\" value=\"like\" onClick={increaseLikes} data-testid=\"increase-likes\"/><br />\n        <div data-testid=\"blog-username\">\n          {blog.user.username}<br/>\n        </div>\n        <input type=\"button\" data-testid=\"remove-blogs\" onClick={removeBlog} value=\"remove\" />\n      </div>\n    </div>\n  )\n\n}\n\nexport default Blog","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Register = ({ register, toggleVisibility }) => {\n  Register.propTypes = {\n    register: PropTypes.func.isRequired\n  }\n  const [ details, setDetails ] = useState({})\n  const handleRegister = (event) => {\n    event.preventDefault()\n    register(details)\n    toggleVisibility()\n  }\n\n  const updateDetails = (item, value) => {\n    const newUserObject = {}\n    newUserObject[item] = value\n    setDetails({ ...details, ...newUserObject })\n  }\n\n  const spaceStyle = {\n    marginRight: 5\n  }\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <form onSubmit={handleRegister} data-testid= 'form-register'>\n        <div>\n          <label htmlFor='name' style={spaceStyle} >Enter Name</label>\n          <input type='text' id='name' data-testid = 'name' onChange={({ target }) => updateDetails('name', target.value)} />\n        </div>\n        <div>\n          <label htmlFor='username' style={spaceStyle} >Enter Username</label>\n          <input type='text' id='username' data-testid = 'username' onChange={({ target }) => updateDetails('username', target.value)} />\n        </div>\n        <div>\n          <label htmlFor='password' style={spaceStyle} >Enter Password</label>\n          <input type='password' id='password' data-testid = 'password' onChange={({ target }) => updateDetails('password', target.value)} />\n        </div>\n        <span>\n          <div style={{ ...spaceStyle, float: 'left' }}><input type='submit' value='register' data-testid='register-user' /></div>\n          <div><input type='button' value='cancel' onClick={ toggleVisibility } data-testid='toggle-register'/></div>\n        </span>\n      </form>\n    </div>\n  )\n}\n\nexport default Register","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst LoginForm = ({ setUsername, setPassword, handleSubmit, style,  toggleVisibility }) => {\n  LoginForm.propTypes = {\n    setUsername: PropTypes.func.isRequired,\n    setPassword: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  return (\n    <div>\n      <h2>login to the application</h2>\n      <form onSubmit={event => handleSubmit(event)}>\n        <div style={style}>username <input type='text' data-testid='username-txt' onChange={event => setUsername(event.target.value)}/></div>\n        <div style={style}>password <input type='password' data-testid='password-txt' onChange={event => setPassword(event.target.value)}/></div>\n        <span>\n          <div style={{ ...style, marginRight: 5, float:'left' }}><input type=\"submit\" data-testid='submit-cred' value=\"login\" /></div>\n          <div style={style}><input type='button' value='register' onClick={ toggleVisibility }/></div>\n        </span>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport Register from './Register'\nimport LoginForm from './Login'\n\nconst TogglableBlogEntry = React.forwardRef((props, ref) => {\n  TogglableBlogEntry.displayName = 'TogglableBlogEntry'\n  const [ visible, setVisible ] = useState(false)\n  const showWhenVisible = { display: visible ? '' : 'none' }\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <input type='button' data-testid='createNew-show' value={props.buttonLabel} onClick={toggleVisibility}/>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <input type='button' value='cancel' onClick={toggleVisibility}/>\n      </div>\n    </div>\n  )\n})\n\nconst TogglableLandingPage = ({ registerHandle, setUsername, setPassword, handleSubmit, style }) => {\n  TogglableLandingPage.propTypes = {\n    registerHandle : PropTypes.func.isRequired\n  }\n\n  const [ register, setRegister ] = useState(false)\n\n  const registerDisplayStyle = {\n    display: register ? '' : 'none'\n  }\n\n  const restDisplayStyle = {\n    display: register ? 'none' : ''\n  }\n\n  const toggleVisibility = () => {\n    setRegister(!register)\n  }\n\n  return(\n    <div>\n      <div style={registerDisplayStyle}>\n        <Register register={registerHandle} toggleVisibility={toggleVisibility}/>\n      </div>\n      <div style={restDisplayStyle}>\n        <LoginForm setUsername = {setUsername} setPassword={setPassword} handleSubmit={handleSubmit} style={style} toggleVisibility={toggleVisibility} />\n      </div>\n    </div>\n  )\n}\n\nexport {\n  TogglableBlogEntry,\n  TogglableLandingPage\n}","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nconst CreateBlog = ({ addBlog, style }) => {\n  const [newBlog, setNewBlog] = useState({})\n  CreateBlog.propTypes = {\n    addBlog: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const createBlogObject = (item, value) => {\n    const newBlogObject = {}\n    newBlogObject[item] = value\n    setNewBlog({ ...newBlog, ...newBlogObject })\n  }\n\n  const addNewBlog = async (event) => {\n    event.preventDefault()\n    await addBlog(newBlog)\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={event => addNewBlog(event)} data-testid='createNew-submit'>\n        <div style={style}>title <input type='text' data-testid='title' onChange={event => {createBlogObject('title', event.target.value)}}></input></div>\n        <div style={style}>author <input type='text' data-testid='author' onChange={event => {createBlogObject('author', event.target.value)}}></input></div>\n        <div style={style}>url <input type='text' data-testid='url' onChange={event => {createBlogObject('url', event.target.value)}}></input></div>\n        <div style={style}><button type='submit' data-testid='createNew'>create</button></div>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateBlog","import Blog from './Blog'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { TogglableBlogEntry } from './Togglable'\nimport CreateBlog from './CreateBlog'\nimport PropTypes from 'prop-types'\n\nconst Blogs = ({ clear, style, getBlogs, addBlog, updateBlog, deleteBlog }) => {\n  Blogs.propTypes = {\n    getBlogs: PropTypes.func.isRequired,\n    addBlog: PropTypes.func.isRequired,\n    updateBlog: PropTypes.func.isRequired,\n    deleteBlog: PropTypes.func.isRequired,\n    clear: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const [blogs, setBlogs] = useState([])\n  const toggleCreate = useRef()\n\n  useEffect(() => {\n    if (!blogs.length) {\n      getBlogs()\n        .then(data => setBlogs(data))\n    }\n  }, [blogs])\n\n  const createNewBlog = async (newBlog) => {\n    await addBlog(newBlog)\n    toggleCreate.current.toggleVisibility()\n    setBlogs(await getBlogs())\n  }\n\n  const deleteExisting = async id => {\n    await deleteBlog(id)\n    setBlogs(blogs.filter(blog => blog.id !== id))\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{window.localStorage.getItem('user')} has logged in <button onClick={clear}>logout</button></p>\n      <TogglableBlogEntry buttonLabel=\"Add Blog\" ref={toggleCreate}>\n        <CreateBlog addBlog={createNewBlog} style={style} />\n      </TogglableBlogEntry>\n      {blogs ? blogs.sort((a,b) => b.likes - a.likes).map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} deleteBlog={deleteExisting}/>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Blogs\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Success = ({ message, style }) => {\n  Success.propTypes = {\n    message: PropTypes.object.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    ...style,\n    color: 'green'\n  }\n  return (\n    <div data-testid='text-notification' style={messageStyle}>\n      {message.success}\n    </div>\n  )\n}\n\nconst Failure = ({ message, style }) => {\n  Success.propTypes = {\n    message: PropTypes.string.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    ...style,\n    color: 'red'\n  }\n  return (\n    <div data-testid='text-notification' style={messageStyle}>\n      {message.error}\n    </div>\n  )\n}\n\nexport {\n  Success,\n  Failure\n}","import { Success, Failure } from './Notification'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Notifications = ({ message }) => {\n  Notifications.propTypes = {\n    message: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    color: 'black',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 5,\n    marginBottom: 10\n  }\n  if ('error' in message){\n    return (\n      <div>\n        <Failure message={message} style={messageStyle}/>\n      </div>\n    )\n  }\n  else if ('success' in message){\n    return (\n      <div>\n        <Success message={message} style={messageStyle}/>\n      </div>\n    )\n  }\n  return null\n\n}\n\nexport default Notifications","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst validateLogin = async credentials => {\n  const user = await axios.post(baseUrl, credentials)\n  return user.data\n}\n\nexport default {\n  validateLogin\n}","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createNew = async (blogObject, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  const response = await axios.post(baseUrl, blogObject, configuration)\n  return response.data\n}\n\nconst updateExisting = async (id, blogObject, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  await axios.put(`${baseUrl}/${id}`, blogObject, configuration)\n\n}\n\nconst deleteExisting = async (id, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  await axios.delete(`${baseUrl}/${id}`, configuration)\n}\n\nconst services = {\n  getAll,\n  createNew,\n  updateExisting,\n  deleteExisting\n}\n\nexport default services","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst register = async ({ username, name, password }) => {\n  await axios.post(baseUrl, { username, name, password })\n}\n\nexport default {\n  register\n}","import React, { useState } from 'react'\nimport Blogs from './components/Blogs'\nimport Notifications from './components/Notifications'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\nimport registerService from './services/register'\nimport { TogglableLandingPage } from './components/Togglable'\n\nconst App = () => {\n  const [notification, setNotification] = useState({})\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const formInputStyle = {\n    marginBottom: 5\n  }\n  const fetchBlogs = async () => {\n    try {\n      const data = await blogService.getAll()\n      return data\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n      return null\n    }\n\n  }\n\n  const createBlog = async (blogObject) => {\n    try{\n      await blogService.createNew(blogObject, window.localStorage.getItem('token'))\n      setNotification({\n        success : 'Blog added successfully'\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const updateBlog = async (id, blogObject) => {\n    try{\n      await blogService.updateExisting(id, blogObject, window.localStorage.getItem('token'))\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const deleteBlog = async (id) => {\n    try{\n      await blogService.deleteExisting(id, window.localStorage.getItem('token'))\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.validateLogin({ username, password })\n      window.localStorage.setItem('token', user.token)\n      window.localStorage.setItem('user', user.name)\n      setNotification({\n        success : `Successfully logged in, user ${user.name}`\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('user')\n    setUsername('')\n    setPassword('')\n    setNotification({\n      success : 'Successfully logged out'\n    })\n    setTimeout(() => setNotification({}), 5000)\n  }\n\n  const handleRegister = async (user) => {\n    try {\n      await registerService.register(user)\n      setNotification({\n        success: 'User registered successfully'\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error) {\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error: error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notifications message = {notification} />\n      {window.localStorage.getItem('token') ? <Blogs clear={handleLogout} style={formInputStyle} getBlogs={fetchBlogs} addBlog={createBlog} updateBlog={updateBlog} deleteBlog={deleteBlog}/> : <TogglableLandingPage registerHandle={handleRegister} setUsername = {setUsername} setPassword={setPassword} handleSubmit={handleLogin} style={formInputStyle} />}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}