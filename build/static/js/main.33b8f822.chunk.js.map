{"version":3,"sources":["components/Blog.js","components/Togglable.js","components/CreateBlog.js","components/Blogs.js","components/Notification.js","components/Notifications.js","components/Login.js","services/login.js","services/blogs.js","App.js","index.js"],"names":["Blog","blog","updateBlog","deleteBlog","space","marginRight","useState","visible","setVisible","likes","setLikes","displayStyle","display","buttonLabel","increaseLikes","a","blogObject","title","author","url","id","removeBlog","window","confirm","user","username","data-testid","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","type","value","onClick","Togglable","React","forwardRef","props","ref","displayName","showWhenVisible","hideWhenVisible","toggleVisibility","useImperativeHandle","children","CreateBlog","addBlog","newBlog","setNewBlog","createBlogObject","item","newObject","addNewBlog","event","preventDefault","onSubmit","onChange","target","Blogs","clear","getBlogs","blogs","setBlogs","toggleCreate","useRef","useEffect","length","then","data","createNewBlog","current","deleteExisting","filter","localStorage","getItem","sort","b","map","Success","message","messageStyle","color","success","Failure","error","Notifications","background","fontSize","borderStyle","borderRadius","padding","LoginForm","setUsername","setPassword","handleSubmit","validateLogin","credentials","axios","post","baseUrl","services","getAll","get","response","createNew","token","configuration","headers","Authorization","updateExisting","put","delete","App","notification","setNotification","password","formInputStyle","fetchBlogs","blogService","console","log","setTimeout","createBlog","handleLogin","loginService","setItem","name","removeItem","Login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33b8f822.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, updateBlog, deleteBlog }) => {\n  Blog.propTypes = {\n    blog: PropTypes.object.isRequired,\n    updateBlog: PropTypes.func.isRequired,\n    deleteBlog: PropTypes.func.isRequired\n  }\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const space = {\n    marginRight: 5\n  }\n\n  const [ visible, setVisible ] = useState(false)\n  const [ likes, setLikes ] = useState(blog.likes)\n\n  const toggleVisibility = () => setVisible(!visible)\n  const displayStyle = { display: visible ? '' : 'none' }\n  const buttonLabel = visible ? 'hide' : 'show'\n\n  const increaseLikes = async () => {\n    setLikes(likes+1)\n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: likes+1\n    }\n    await updateBlog(blog.id, blogObject)\n  }\n  const removeBlog = async () => {\n    if(window.confirm(`Remove blog '${blog.title}' by ${blog.user.username}`)){\n      await deleteBlog(blog.id)\n    }\n  }\n\n  return (\n    <div data-testid='blog-container' style={blogStyle}>\n      <div data-testid=\"static-elements\">\n        <span data-testid=\"blog-title\" style={space}>{blog.title}</span> <span data-testid=\"blog-author\" style={space}>{blog.author}</span> <input type=\"button\" value={buttonLabel} onClick={toggleVisibility} data-testid=\"toggle-details\"/>\n      </div>\n      <div data-testid=\"dynamic-elements\" style={displayStyle} >\n        <div data-testid=\"blog-url\">\n          {blog.url}<br />\n        </div>\n        <span data-testid=\"blog-likes\" style={space}>{likes}</span><input type=\"button\" value=\"like\" onClick={increaseLikes} data-testid=\"increase-likes\"/><br />\n        <div data-testid=\"blog-username\">\n          {blog.user.username}<br/>\n        </div>\n        <input type=\"button\" data-testid=\"remove-blogs\" onClick={removeBlog} value=\"remove\" />\n      </div>\n    </div>\n  )\n\n}\n\nexport default Blog","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  Togglable.displayName = 'Togglable'\n  const [ visible, setVisible ] = useState(false)\n  const showWhenVisible = { display: visible ? '' : 'none' }\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <input type='button' data-testid='createNew-show' value={props.buttonLabel} onClick={toggleVisibility}/>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <input type='button' value='cancel' onClick={toggleVisibility}/>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nconst CreateBlog = ({ addBlog, style }) => {\n  const [newBlog, setNewBlog] = useState({})\n  CreateBlog.propTypes = {\n    addBlog: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const createBlogObject = (item, value) => {\n    const newObject = {}\n    newObject[item] = value\n    setNewBlog({ ...newBlog, ...newObject })\n  }\n\n  const addNewBlog = async (event) => {\n    event.preventDefault()\n    await addBlog(newBlog)\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={event => addNewBlog(event)} data-testid='createNew-submit'>\n        <div style={style}>title <input type='text' data-testid='title' onChange={event => {createBlogObject('title', event.target.value)}}></input></div>\n        <div style={style}>author <input type='text' data-testid='author' onChange={event => {createBlogObject('author', event.target.value)}}></input></div>\n        <div style={style}>url <input type='text' data-testid='url' onChange={event => {createBlogObject('url', event.target.value)}}></input></div>\n        <div style={style}><button type='submit' data-testid='createNew'>create</button></div>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateBlog","import Blog from './Blog'\nimport React, { useState, useEffect, useRef } from 'react'\nimport Togglable from './Togglable'\nimport CreateBlog from './CreateBlog'\nimport PropTypes from 'prop-types'\n\nconst Blogs = ({ clear, style, getBlogs, addBlog, updateBlog, deleteBlog }) => {\n  Blogs.propTypes = {\n    getBlogs: PropTypes.func.isRequired,\n    addBlog: PropTypes.func.isRequired,\n    updateBlog: PropTypes.func.isRequired,\n    deleteBlog: PropTypes.func.isRequired,\n    clear: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const [blogs, setBlogs] = useState([])\n  const toggleCreate = useRef()\n\n  useEffect(() => {\n    if (!blogs.length) {\n      getBlogs()\n        .then(data => setBlogs(data))\n    }\n  }, [blogs])\n\n  const createNewBlog = async (newBlog) => {\n    await addBlog(newBlog)\n    toggleCreate.current.toggleVisibility()\n    setBlogs(await getBlogs())\n  }\n\n  const deleteExisting = async id => {\n    await deleteBlog(id)\n    setBlogs(blogs.filter(blog => blog.id !== id))\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{window.localStorage.getItem('user')} has logged in <button onClick={clear}>logout</button></p>\n      <Togglable buttonLabel=\"Add Blog\" ref={toggleCreate}>\n        <CreateBlog addBlog={createNewBlog} style={style} />\n      </Togglable>\n      {blogs ? blogs.sort((a,b) => b.likes - a.likes).map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} deleteBlog={deleteExisting}/>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Blogs\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Success = ({ message, style }) => {\n  Success.propTypes = {\n    message: PropTypes.object.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    ...style,\n    color: 'green'\n  }\n  return (\n    <div data-testid='text-notification' style={messageStyle}>\n      {message.success}\n    </div>\n  )\n}\n\nconst Failure = ({ message, style }) => {\n  Success.propTypes = {\n    message: PropTypes.string.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    ...style,\n    color: 'red'\n  }\n  return (\n    <div data-testid='text-notification' style={messageStyle}>\n      {message.error}\n    </div>\n  )\n}\n\nexport {\n  Success,\n  Failure\n}","import { Success, Failure } from './Notification'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Notifications = ({ message }) => {\n  Notifications.propTypes = {\n    message: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    color: 'black',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 5,\n    marginBottom: 10\n  }\n  if ('error' in message){\n    return (\n      <div>\n        <Failure message={message} style={messageStyle}/>\n      </div>\n    )\n  }\n  else if ('success' in message){\n    return (\n      <div>\n        <Success message={message} style={messageStyle}/>\n      </div>\n    )\n  }\n  return null\n\n}\n\nexport default Notifications","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst LoginForm = ({ setUsername, setPassword, handleSubmit, style }) => {\n  LoginForm.propTypes = {\n    setUsername: PropTypes.func.isRequired,\n    setPassword: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  return (\n    <div>\n      <h2>login to the application</h2>\n      <form onSubmit={event => handleSubmit(event)}>\n        <div style={style}>username <input type='text' data-testid='username-txt' onChange={event => setUsername(event.target.value)}/></div>\n        <div style={style}>password <input type='password' data-testid='password-txt' onChange={event => setPassword(event.target.value)}/></div>\n        <div style={style}><input type=\"submit\" data-testid='submit-cred' value=\"login\" /></div>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst validateLogin = async credentials => {\n  const user = await axios.post(baseUrl, credentials)\n  return user.data\n}\n\nexport default {\n  validateLogin\n}","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createNew = async (blogObject, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  const response = await axios.post(baseUrl, blogObject, configuration)\n  return response.data\n}\n\nconst updateExisting = async (id, blogObject, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  await axios.put(`${baseUrl}/${id}`, blogObject, configuration)\n\n}\n\nconst deleteExisting = async (id, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  await axios.delete(`${baseUrl}/${id}`, configuration)\n}\n\nconst services = {\n  getAll,\n  createNew,\n  updateExisting,\n  deleteExisting\n}\n\nexport default services","import React, { useState } from 'react'\nimport Blogs from './components/Blogs'\nimport Notifications from './components/Notifications'\nimport LoginForm from './components/Login'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\n\nconst App = () => {\n  const [notification, setNotification] = useState({})\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const formInputStyle = {\n    marginBottom: 5\n  }\n  const fetchBlogs = async () => {\n    try {\n      const data = await blogService.getAll()\n      return data\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n      return null\n    }\n\n  }\n\n  const createBlog = async (blogObject) => {\n    try{\n      await blogService.createNew(blogObject, window.localStorage.getItem('token'))\n      setNotification({\n        success : 'Blog added successfully'\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const updateBlog = async (id, blogObject) => {\n    try{\n      await blogService.updateExisting(id, blogObject, window.localStorage.getItem('token'))\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const deleteBlog = async (id) => {\n    try{\n      await blogService.deleteExisting(id, window.localStorage.getItem('token'))\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.validateLogin({ username, password })\n      window.localStorage.setItem('token', user.token)\n      window.localStorage.setItem('user', user.name)\n      setNotification({\n        success : `Successfully logged in, user ${user.name}`\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('user')\n    setUsername('')\n    setPassword('')\n    setNotification({\n      success : 'Successfully logged out'\n    })\n    setTimeout(() => setNotification({}), 5000)\n  }\n\n  return (\n    <div>\n      <Notifications message = {notification} />\n      {window.localStorage.getItem('token') ? <Blogs clear={handleLogout} style={formInputStyle} getBlogs={fetchBlogs} addBlog={createBlog} updateBlog={updateBlog} deleteBlog={deleteBlog}/> : <LoginForm setUsername = {setUsername} setPassword={setPassword} handleSubmit={handleLogin} style={formInputStyle}/>}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}