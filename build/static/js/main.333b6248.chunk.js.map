{"version":3,"sources":["components/Blog.js","components/Register.js","components/Login.js","components/Togglable.js","components/CreateBlog.js","components/Blogs.js","components/Notification.js","components/Notifications.js","services/login.js","services/blogs.js","services/register.js","App.js","index.js"],"names":["Blog","blog","updateBlog","deleteBlog","space","marginRight","useState","visible","setVisible","likes","setLikes","displayStyle","display","buttonLabel","increaseLikes","a","blogObject","title","author","url","id","removeBlog","window","confirm","user","username","data-testid","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","type","value","onClick","Register","register","toggleVisibility","details","setDetails","handleRegister","event","preventDefault","console","log","response","data","error","message","updateDetails","item","newUserObject","spaceStyle","onSubmit","htmlFor","onChange","target","float","LoginForm","setUsername","setPassword","handleSubmit","TogglableBlogEntry","React","forwardRef","props","ref","displayName","showWhenVisible","hideWhenVisible","useImperativeHandle","children","TogglableLandingPage","registerHandle","setRegister","registerDisplayStyle","restDisplayStyle","Login","CreateBlog","addBlog","newBlog","setNewBlog","createBlogObject","newBlogObject","addNewBlog","Blogs","clear","getBlogs","blogs","setBlogs","toggleCreate","useRef","useEffect","length","then","createNewBlog","current","deleteExisting","filter","localStorage","getItem","sort","b","map","Success","messageStyle","color","success","Failure","Notifications","background","fontSize","borderStyle","borderRadius","padding","validateLogin","credentials","axios","post","baseUrl","services","getAll","get","createNew","token","configuration","headers","Authorization","updateExisting","put","delete","name","password","App","notification","setNotification","formInputStyle","fetchBlogs","blogService","setTimeout","createBlog","handleLogin","loginService","setItem","registerService","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.333b6248.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, updateBlog, deleteBlog }) => {\n  Blog.propTypes = {\n    blog: PropTypes.object.isRequired,\n    updateBlog: PropTypes.func.isRequired,\n    deleteBlog: PropTypes.func.isRequired\n  }\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const space = {\n    marginRight: 5\n  }\n\n  const [ visible, setVisible ] = useState(false)\n  const [ likes, setLikes ] = useState(blog.likes)\n\n  const toggleVisibility = () => setVisible(!visible)\n  const displayStyle = { display: visible ? '' : 'none' }\n  const buttonLabel = visible ? 'hide' : 'show'\n\n  const increaseLikes = async () => {\n    setLikes(likes+1)\n    const blogObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: likes+1\n    }\n    await updateBlog(blog.id, blogObject)\n  }\n  const removeBlog = async () => {\n    if(window.confirm(`Remove blog '${blog.title}' by ${blog.user.username}`)){\n      await deleteBlog(blog.id)\n    }\n  }\n\n  return (\n    <div data-testid='blog-container' style={blogStyle}>\n      <div data-testid=\"static-elements\">\n        <span data-testid=\"blog-title\" style={space}>{blog.title}</span> <span data-testid=\"blog-author\" style={space}>{blog.author}</span> <input type=\"button\" value={buttonLabel} onClick={toggleVisibility} data-testid=\"toggle-details\"/>\n      </div>\n      <div data-testid=\"dynamic-elements\" style={displayStyle} >\n        <div data-testid=\"blog-url\">\n          {blog.url}<br />\n        </div>\n        <span data-testid=\"blog-likes\" style={space}>{likes}</span><input type=\"button\" value=\"like\" onClick={increaseLikes} data-testid=\"increase-likes\"/><br />\n        <div data-testid=\"blog-username\">\n          {blog.user.username}<br/>\n        </div>\n        <input type=\"button\" data-testid=\"remove-blogs\" onClick={removeBlog} value=\"remove\" />\n      </div>\n    </div>\n  )\n\n}\n\nexport default Blog","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Register = ({ register, toggleVisibility }) => {\n  Register.propTypes = {\n    register: PropTypes.func.isRequired\n  }\n  const [ details, setDetails ] = useState({})\n  const handleRegister = async (event) => {\n    event.preventDefault()\n    try{\n      await register(details)\n      toggleVisibility()\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n    }\n  }\n\n  const updateDetails = (item, value) => {\n    const newUserObject = {}\n    newUserObject[item] = value\n    setDetails({ ...details, ...newUserObject })\n  }\n\n  const spaceStyle = {\n    marginRight: 5\n  }\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <form onSubmit={handleRegister} data-testid= 'form-register' style={{ display: 'table' }}>\n        <fieldset style={{ border: 'none' }}>\n          <div style= {{ display: 'table-row' }}>\n            <label htmlFor='name_register' style={{ ...spaceStyle, display: 'table-cell' }} >Enter Name</label>\n            <input type='text' id='name_register' data-testid = 'name-register' onChange={({ target }) => updateDetails('name', target.value)} style={{ ...spaceStyle, display: 'table-cell' }} />\n          </div>\n          <div style= {{ display: 'table-row' }}>\n            <label htmlFor='username_register' style={{ ...spaceStyle, display: 'table-cell' }} >Enter Username</label>\n            <input type='text' id='username_register' data-testid = 'username-register' onChange={({ target }) => updateDetails('username', target.value)} style={{ ...spaceStyle, display: 'table-cell' }} />\n          </div>\n          <div style= {{ display: 'table-row' }}>\n            <label htmlFor='password_register' style={{ ...spaceStyle, display: 'table-cell' }} >Enter Password</label>\n            <input type='password' id='password_register' data-testid = 'password-register' onChange={({ target }) => updateDetails('password', target.value)} style={{ ...spaceStyle, display: 'table-cell' }} />\n          </div>\n          <div style= {{ display: 'table-row' }}>\n            <input type='submit' value='register' data-testid='register-user' style={{ ...spaceStyle, display: 'table-cell', float: 'left'  }} />\n            <input type='button' value='cancel' onClick={ toggleVisibility } data-testid='toggle-register' style={{ ...spaceStyle, display: 'table-cell' }} />\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  )\n}\n\nexport default Register","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst LoginForm = ({ setUsername, setPassword, handleSubmit, style,  toggleVisibility }) => {\n  LoginForm.propTypes = {\n    setUsername: PropTypes.func.isRequired,\n    setPassword: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  return (\n    <div>\n      <h2>login to the application</h2>\n      <form onSubmit={event => handleSubmit(event)} style= {{ display: 'table' }}>\n        <fieldset style={{ border: 'none' }}>\n          <div style={{ display: 'table-row' }}>\n            <label htmlFor='username' style={{ ...style, display: 'table-cell' }}>username</label>\n            <input type='text' id='username' data-testid='username-txt' onChange={event => setUsername(event.target.value)} style={{ ...style, display: 'table-cell' }}/>\n          </div>\n          <div style={{ display: 'table-row' }}>\n            <label htmlFor='password' style={{ ...style, display: 'table-cell' }}>password</label>\n            <input type='password' data-testid='password-txt' onChange={event => setPassword(event.target.value)} style={{ ...style, display: 'table-cell' }}/>\n          </div>\n          <div style={{ display: 'table-row' }}>\n            <input type=\"submit\" data-testid='submit-cred' value=\"login\" style={{ ...style, float:'left', display: 'table-cell' }} />\n            <input type='button' value='register' onClick={ toggleVisibility } style={{ ...style, float:'left', display: 'table-cell' }} />\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport Register from './Register'\nimport LoginForm from './Login'\n\nconst TogglableBlogEntry = React.forwardRef((props, ref) => {\n  TogglableBlogEntry.displayName = 'TogglableBlogEntry'\n  const [ visible, setVisible ] = useState(false)\n  const showWhenVisible = { display: visible ? '' : 'none' }\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <input type='button' data-testid='createNew-show' value={props.buttonLabel} onClick={toggleVisibility}/>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <input type='button' value='cancel' onClick={toggleVisibility}/>\n      </div>\n    </div>\n  )\n})\n\nconst TogglableLandingPage = ({ registerHandle, setUsername, setPassword, handleSubmit, style }) => {\n  TogglableLandingPage.propTypes = {\n    registerHandle : PropTypes.func.isRequired\n  }\n\n  const [ register, setRegister ] = useState(false)\n\n  const registerDisplayStyle = {\n    display: register ? '' : 'none'\n  }\n\n  const restDisplayStyle = {\n    display: register ? 'none' : ''\n  }\n\n  const toggleVisibility = () => {\n    setRegister(!register)\n  }\n\n  return(\n    <div>\n      <div style={registerDisplayStyle}>\n        <Register register={registerHandle} toggleVisibility={toggleVisibility} />\n      </div>\n      <div style={restDisplayStyle}>\n        <LoginForm setUsername = {setUsername} setPassword={setPassword} handleSubmit={handleSubmit} style={style} toggleVisibility={toggleVisibility} />\n      </div>\n    </div>\n  )\n}\n\nexport {\n  TogglableBlogEntry,\n  TogglableLandingPage\n}","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nconst CreateBlog = ({ addBlog, style }) => {\n  const [newBlog, setNewBlog] = useState({})\n  CreateBlog.propTypes = {\n    addBlog: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const createBlogObject = (item, value) => {\n    const newBlogObject = {}\n    newBlogObject[item] = value\n    setNewBlog({ ...newBlog, ...newBlogObject })\n  }\n\n  const addNewBlog = async (event) => {\n    event.preventDefault()\n    await addBlog(newBlog)\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={event => addNewBlog(event)} data-testid='createNew-submit'>\n        <div style={style}>title <input type='text' data-testid='title' onChange={event => {createBlogObject('title', event.target.value)}}></input></div>\n        <div style={style}>author <input type='text' data-testid='author' onChange={event => {createBlogObject('author', event.target.value)}}></input></div>\n        <div style={style}>url <input type='text' data-testid='url' onChange={event => {createBlogObject('url', event.target.value)}}></input></div>\n        <div style={style}><button type='submit' data-testid='createNew'>create</button></div>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateBlog","import Blog from './Blog'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { TogglableBlogEntry } from './Togglable'\nimport CreateBlog from './CreateBlog'\nimport PropTypes from 'prop-types'\n\nconst Blogs = ({ clear, style, getBlogs, addBlog, updateBlog, deleteBlog }) => {\n  Blogs.propTypes = {\n    getBlogs: PropTypes.func.isRequired,\n    addBlog: PropTypes.func.isRequired,\n    updateBlog: PropTypes.func.isRequired,\n    deleteBlog: PropTypes.func.isRequired,\n    clear: PropTypes.func.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const [blogs, setBlogs] = useState([])\n  const toggleCreate = useRef()\n\n  useEffect(() => {\n    if (!blogs.length) {\n      getBlogs()\n        .then(data => setBlogs(data))\n    }\n  }, [blogs])\n\n  const createNewBlog = async (newBlog) => {\n    await addBlog(newBlog)\n    toggleCreate.current.toggleVisibility()\n    setBlogs(await getBlogs())\n  }\n\n  const deleteExisting = async id => {\n    await deleteBlog(id)\n    setBlogs(blogs.filter(blog => blog.id !== id))\n  }\n\n  return (\n    <div data-testid='blogs-screen'>\n      <h2>blogs</h2>\n      <p>{window.localStorage.getItem('user')} has logged in <button onClick={clear}>logout</button></p>\n      <TogglableBlogEntry buttonLabel=\"Add Blog\" ref={toggleCreate}>\n        <CreateBlog addBlog={createNewBlog} style={style} />\n      </TogglableBlogEntry>\n      {blogs ? blogs.sort((a,b) => b.likes - a.likes).map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} deleteBlog={deleteExisting}/>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Blogs\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Success = ({ message, style }) => {\n  Success.propTypes = {\n    message: PropTypes.object.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    ...style,\n    color: 'green'\n  }\n  return (\n    <div data-testid='text-notification' style={messageStyle}>\n      {message.success}\n    </div>\n  )\n}\n\nconst Failure = ({ message, style }) => {\n  Success.propTypes = {\n    message: PropTypes.string.isRequired,\n    style: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    ...style,\n    color: 'red'\n  }\n  return (\n    <div data-testid='text-notification' style={messageStyle}>\n      {message.error}\n    </div>\n  )\n}\n\nexport {\n  Success,\n  Failure\n}","import { Success, Failure } from './Notification'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Notifications = ({ message }) => {\n  Notifications.propTypes = {\n    message: PropTypes.object.isRequired\n  }\n\n  const messageStyle = {\n    color: 'black',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 5,\n    marginBottom: 10\n  }\n  if ('error' in message){\n    return (\n      <div>\n        <Failure message={message} style={messageStyle}/>\n      </div>\n    )\n  }\n  else if ('success' in message){\n    return (\n      <div>\n        <Success message={message} style={messageStyle}/>\n      </div>\n    )\n  }\n  return null\n\n}\n\nexport default Notifications","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst validateLogin = async credentials => {\n  const user = await axios.post(baseUrl, credentials)\n  return user.data\n}\n\nexport default {\n  validateLogin\n}","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createNew = async (blogObject, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  const response = await axios.post(baseUrl, blogObject, configuration)\n  return response.data\n}\n\nconst updateExisting = async (id, blogObject, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  await axios.put(`${baseUrl}/${id}`, blogObject, configuration)\n\n}\n\nconst deleteExisting = async (id, token) => {\n  const configuration = {\n    headers: { Authorization : `bearer ${token}` }\n  }\n  await axios.delete(`${baseUrl}/${id}`, configuration)\n}\n\nconst services = {\n  getAll,\n  createNew,\n  updateExisting,\n  deleteExisting\n}\n\nexport default services","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst register = async ({ username, name, password }) => {\n  await axios.post(baseUrl, { username, name, password })\n}\n\nexport default {\n  register\n}","import React, { useState } from 'react'\nimport Blogs from './components/Blogs'\nimport Notifications from './components/Notifications'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\nimport registerService from './services/register'\nimport { TogglableLandingPage } from './components/Togglable'\n\nconst App = () => {\n  const [notification, setNotification] = useState({})\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const formInputStyle = {\n    marginBottom: 5,\n    marginRight: 5\n  }\n  const fetchBlogs = async () => {\n    try {\n      const data = await blogService.getAll()\n      return data\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n      return null\n    }\n\n  }\n\n  const createBlog = async (blogObject) => {\n    try{\n      await blogService.createNew(blogObject, window.localStorage.getItem('token'))\n      setNotification({\n        success : 'Blog added successfully'\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const updateBlog = async (id, blogObject) => {\n    try{\n      await blogService.updateExisting(id, blogObject, window.localStorage.getItem('token'))\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const deleteBlog = async (id) => {\n    try{\n      await blogService.deleteExisting(id, window.localStorage.getItem('token'))\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.validateLogin({ username, password })\n      window.localStorage.setItem('token', user.token)\n      window.localStorage.setItem('user', user.name)\n      setNotification({\n        success : `Successfully logged in, user ${user.name}`\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error){\n      console.log(error.response.data.error || error.response.data || error.message)\n      setNotification({\n        error : error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('user')\n    setUsername('')\n    setPassword('')\n    setNotification({\n      success : 'Successfully logged out'\n    })\n    setTimeout(() => setNotification({}), 5000)\n  }\n\n  const handleRegister = async (user) => {\n    try {\n      await registerService.register(user)\n      setNotification({\n        success: 'User registered successfully'\n      })\n      setTimeout(() => setNotification({}), 5000)\n    }\n    catch(error) {\n      setNotification({\n        error: error.response.data.error || error.response.data || error.message\n      })\n      setTimeout(() => setNotification({}), 5000)\n      throw(error)\n    }\n  }\n\n  return (\n    <div>\n      <Notifications message = {notification} />\n      {window.localStorage.getItem('token') ? <Blogs clear={handleLogout} style={formInputStyle} getBlogs={fetchBlogs} addBlog={createBlog} updateBlog={updateBlog} deleteBlog={deleteBlog}/> : <TogglableLandingPage registerHandle={handleRegister} setUsername = {setUsername} setPassword={setPassword} handleSubmit={handleLogin} style={formInputStyle} />}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}